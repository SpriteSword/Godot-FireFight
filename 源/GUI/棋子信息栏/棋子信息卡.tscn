[gd_scene load_steps=5 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]
[ext_resource path="res://源/GUI/棋子信息栏/棋子信息卡StyleBox.tres" type="StyleBox" id=2]

[sub_resource type="CSharpScript" id=4]
script/source = "using Godot;
using System;


public class 棋子信息卡 : Panel
{
	[Signal] delegate void SelectMe(棋子信息卡 me);		//  传给 棋子信息栏
	[Signal ]delegate void Close(棋子信息卡 me);		//  -> 棋子信息栏

	StyleBoxFlat style;
	Label id_label;

	bool selected = false;
	public Piece piece;

	//  棋子信息
	// uint p_id;

	//  是否正在被选
	public bool Selected
	{
		get { return selected; }
		set
		{
			selected = value;
			ChangeStyle();
		}
	}


	public override void _Ready()
	{
		style = Get(\"custom_styles/panel\") as StyleBoxFlat;     //  写死
		id_label = GetNode<Label>(\"IdLabel\");
	}

	public override void _GuiInput(InputEvent @event)
	{
		if (@event.IsActionPressed(\"click_left\"))
		{
			Selected = true;
			EmitSignal(\"SelectMe\", this);
		}
	}


	//  被选中后的效果。同时玩家视角会回到棋子上
	public void ChangeStyle()
	{
		if (selected)
		{
			style.BorderColor = new Color(1, 1, 0);
			style.BorderWidthBottom = 3;
			style.BorderWidthLeft = 3;
			style.BorderWidthRight = 3;
			style.BorderWidthTop = 3;
			return;
		}
		style.BorderColor = new Color(1, 1, 1);
		style.BorderWidthBottom = 1;
		style.BorderWidthLeft = 1;
		style.BorderWidthRight = 1;
		style.BorderWidthTop = 1;
	}

	//  更新棋子信息
	public void UpdatePieceInfo(Piece p)
	{
		piece = p;
		id_label.Text = \"id: \" + p.id.ToString();
	}

	//  关闭。并且告诉主控把该棋子从列表中清除及与之相应的效果
	private void _on_CloseBtn_pressed()
	{
		EmitSignal(\"Close\", this);
		QueueFree();
	}


}

"

[sub_resource type="StyleBoxFlat" id=2]
draw_center = false
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color( 0.545098, 0.545098, 0.545098, 1 )

[node name="棋子信息卡" type="Panel"]
margin_right = 180.0
margin_bottom = 120.0
rect_min_size = Vector2( 180, 120 )
custom_styles/panel = ExtResource( 2 )
script = SubResource( 4 )

[node name="TextureRect" type="TextureRect" parent="."]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -65.0
margin_top = 1.0
margin_right = -1.0
margin_bottom = 65.0
grow_horizontal = 0
rect_scale = Vector2( 0.6, 0.6 )
texture = ExtResource( 1 )

[node name="StateLabel" type="Label" parent="."]
margin_left = 9.0
margin_top = 82.0
margin_right = 171.0
margin_bottom = 115.0
rect_min_size = Vector2( 150, 32 )
custom_styles/normal = SubResource( 2 )
text = "jdjsfjdklsjflkds
"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="IdLabel" type="Label" parent="."]
margin_left = 8.0
margin_top = 9.0
margin_right = 48.0
margin_bottom = 23.0
text = "id:"

[node name="CloseBtn" type="Button" parent="."]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -24.0
margin_top = 1.0
margin_right = -1.0
margin_bottom = 21.0
grow_horizontal = 0
text = "c"

[connection signal="pressed" from="CloseBtn" to="." method="_on_CloseBtn_pressed"]
